# HMI Project 2024, Tobias Tefke
services:
  # Reverse proxy
  reverse-proxy:
    image: traefik:v2.11
    restart: ${RESTART_POLICY}
    command:
      # Allow web debug page 
      - --api.insecure=true
      - --log.level=${LOG_LEVEL}
      - --providers.docker=true
      - --providers.docker.exposedByDefault=false
      - --providers.providersThrottleDuration=10s
      # Entrypoints
      - --entryPoints.web.address=:80
    ports:
      # Web interface port
      - "${HTTP_PORT}:80"
      # Debug API
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  # frontend
  frontend:
    build: frontend
    restart: ${RESTART_POLICY}
    labels:
      traefik.enable: "true"
      traefik.http.middlewares.strip-frontend-prefix.stripprefix.prefixes: "/"
      traefik.http.routers.frontend.rule: "PathPrefix(`/`)"
      traefik.http.routers.frontend.middlewares: "strip-frontend-prefix@docker"
      traefik.http.routers.frontend.entryPoints: "web"
      traefik.http.services.frontend.loadbalancer.server.port: "80"
      
  # Server providing the LLM (/vectorise API)
  llm:
    build: llm-server
    restart: ${RESTART_POLICY}
    volumes:
      - "./llm-server/hss_server:/server"
 
   # Query Processor
  query:
    build: QueryProcessor
    restart: ${RESTART_POLICY}
    environment:
      - BACKEND_URL
    labels:
      traefik.enable: "true"
      traefik.http.middlewares.strip-query-prefix.stripprefix.prefixes: "/query"
      traefik.http.routers.query.rule: "PathPrefix(`/query`)"
      traefik.http.routers.query.middlewares: "strip-query-prefix@docker"
      traefik.http.routers.query.entryPoints: "web"
      traefik.http.services.query.loadbalancer.server.port: "8080"
